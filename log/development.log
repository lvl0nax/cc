MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (37ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (113ms) test_mongoid_development['system.namespaces'].find({})
MONGODB (72ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (7ms) test_mongoid_development['system.indexes'].insert([{:name=>"name_1", :ns=>"test_mongoid_development.users", :key=>{"name"=>1}, :unique=>true, :background=>true}])


Started GET "/" for 127.0.0.1 at 2012-07-19 10:17:22 +0400
  Processing by PagesController#index as HTML
MONGODB (0ms) test_mongoid_development['system.namespaces'].find({})
MONGODB (30ms) test_mongoid_development['pages'].find({})
Rendered pages/index.html.erb within layouts/application (55.4ms)
Completed 200 OK in 295ms (Views: 287.2ms)


Started GET "/assets/application.css?body=1" for 127.0.0.1 at 2012-07-19 10:17:22 +0400
Served asset /application.css - 304 Not Modified (0ms)


Started GET "/assets/pages.css?body=1" for 127.0.0.1 at 2012-07-19 10:17:22 +0400
Served asset /pages.css - 304 Not Modified (3ms)


Started GET "/assets/scaffolds.css?body=1" for 127.0.0.1 at 2012-07-19 10:17:22 +0400
Served asset /scaffolds.css - 304 Not Modified (1ms)


Started GET "/assets/roles.css?body=1" for 127.0.0.1 at 2012-07-19 10:17:22 +0400
Served asset /roles.css - 304 Not Modified (0ms)


Started GET "/assets/spages.js?body=1" for 127.0.0.1 at 2012-07-19 10:17:22 +0400
Served asset /spages.js - 304 Not Modified (1ms)


Started GET "/assets/roles.js?body=1" for 127.0.0.1 at 2012-07-19 10:17:22 +0400
Served asset /roles.js - 304 Not Modified (0ms)


Started GET "/assets/jquery_ujs.js?body=1" for 127.0.0.1 at 2012-07-19 10:17:22 +0400
Served asset /jquery_ujs.js - 304 Not Modified (1ms)


Started GET "/assets/pages.js?body=1" for 127.0.0.1 at 2012-07-19 10:17:22 +0400
Served asset /pages.js - 304 Not Modified (1ms)


Started GET "/assets/jquery.js?body=1" for 127.0.0.1 at 2012-07-19 10:17:22 +0400
Served asset /jquery.js - 304 Not Modified (1ms)


Started GET "/assets/spages.css?body=1" for 127.0.0.1 at 2012-07-19 10:17:22 +0400
Served asset /spages.css - 304 Not Modified (1ms)


Started GET "/assets/application.js?body=1" for 127.0.0.1 at 2012-07-19 10:17:22 +0400
Served asset /application.js - 304 Not Modified (0ms)


Started GET "/users/sign_up" for 127.0.0.1 at 2012-07-19 10:17:24 +0400

SyntaxError (/home/monax/rails_projects/cc/app/controllers/registrations_controller.rb:21: syntax error, unexpected ')'
/home/monax/rails_projects/cc/app/controllers/registrations_controller.rb:24: syntax error, unexpected keyword_end, expecting ')'):
  

Rendered /home/monax/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.1.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (0.8ms)
Rendered /home/monax/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.1.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.7ms)
Rendered /home/monax/.rvm/gems/ruby-1.9.3-p0/gems/actionpack-3.1.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (3.4ms)


Started GET "/users/sign_up" for 127.0.0.1 at 2012-07-19 10:21:13 +0400
  Processing by RegistrationsController#new as HTML
MONGODB (4ms) test_mongoid_development['system.namespaces'].find({})
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"name_1", :ns=>"test_mongoid_development.users", :key=>{"name"=>1}, :unique=>true, :background=>true}])
Rendered devise/shared/_links.erb (1.5ms)
Rendered devise/registrations/new.html.erb within layouts/application (88.3ms)
Completed 200 OK in 156ms (Views: 121.3ms)


Started GET "/assets/application.css?body=1" for 127.0.0.1 at 2012-07-19 10:21:13 +0400
Served asset /application.css - 304 Not Modified (4ms)


Started GET "/assets/jquery_ujs.js?body=1" for 127.0.0.1 at 2012-07-19 10:21:13 +0400
Served asset /jquery_ujs.js - 304 Not Modified (0ms)


Started GET "/assets/jquery.js?body=1" for 127.0.0.1 at 2012-07-19 10:21:13 +0400
Served asset /jquery.js - 304 Not Modified (0ms)


Started GET "/assets/spages.css?body=1" for 127.0.0.1 at 2012-07-19 10:21:13 +0400
Served asset /spages.css - 304 Not Modified (0ms)


Started GET "/assets/scaffolds.css?body=1" for 127.0.0.1 at 2012-07-19 10:21:14 +0400
Served asset /scaffolds.css - 304 Not Modified (2ms)


Started GET "/assets/roles.css?body=1" for 127.0.0.1 at 2012-07-19 10:21:14 +0400
Served asset /roles.css - 304 Not Modified (0ms)


Started GET "/assets/pages.css?body=1" for 127.0.0.1 at 2012-07-19 10:21:14 +0400
Served asset /pages.css - 304 Not Modified (0ms)


Started GET "/assets/spages.js?body=1" for 127.0.0.1 at 2012-07-19 10:21:14 +0400
Served asset /spages.js - 304 Not Modified (0ms)


Started GET "/assets/roles.js?body=1" for 127.0.0.1 at 2012-07-19 10:21:14 +0400
Served asset /roles.js - 304 Not Modified (0ms)


Started GET "/assets/pages.js?body=1" for 127.0.0.1 at 2012-07-19 10:21:14 +0400
Served asset /pages.js - 304 Not Modified (0ms)


Started GET "/assets/application.js?body=1" for 127.0.0.1 at 2012-07-19 10:21:14 +0400
Served asset /application.js - 304 Not Modified (0ms)


Started POST "/users" for 127.0.0.1 at 2012-07-19 10:21:45 +0400
  Processing by RegistrationsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"HzIo88my1XQKCQfxPLoYb+ea6+mALM9TL+O6uytM1Iw=", "user"=>{"name"=>"aaa", "email"=>"aaa@aaa.aa", "password"=>"[FILTERED]", "password_confirmation"=>"[FILTERED]", "role"=>"individual"}, "commit"=>"Sign up"}
MONGODB (0ms) test_mongoid_development['system.namespaces'].find({})
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"name_1", :ns=>"test_mongoid_development.users", :key=>{"name"=>1}, :unique=>true, :background=>true}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"name_1", :ns=>"test_mongoid_development.users", :key=>{"name"=>1}, :unique=>true, :background=>true}])
MONGODB (43ms) test_mongoid_development['$cmd'].find({"count"=>"users", "query"=>{}, "fields"=>nil}).limit(-1)
WARNING: Can't mass-assign protected attributes: role
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"name_1", :ns=>"test_mongoid_development.users", :key=>{"name"=>1}, :unique=>true, :background=>true}])
MONGODB (43ms) test_mongoid_development['$cmd'].find({"count"=>"users", "query"=>{:email=>"aaa@aaa.aa"}, "fields"=>nil}).limit(-1)
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"name_1", :ns=>"test_mongoid_development.users", :key=>{"name"=>1}, :unique=>true, :background=>true}])
MONGODB (27ms) test_mongoid_development['$cmd'].find({"count"=>"users", "query"=>{:name=>/^aaa$/i}, "fields"=>nil}).limit(-1)
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"name_1", :ns=>"test_mongoid_development.users", :key=>{"name"=>1}, :unique=>true, :background=>true}])
MONGODB (0ms) test_mongoid_development['$cmd'].find({"count"=>"users", "query"=>{:email=>/^aaa@aaa\.aa$/i}, "fields"=>nil}).limit(-1)
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"name_1", :ns=>"test_mongoid_development.users", :key=>{"name"=>1}, :unique=>true, :background=>true}])
MONGODB (0ms) test_mongoid_development['users'].insert([{"email"=>"aaa@aaa.aa", "encrypted_password"=>"$2a$10$ybeYMis7MoABPw.3FT3a1Og4v1b2bCHEvvT9g.MXQs5gYOJaJDDFy", "sign_in_count"=>0, "_id"=>BSON::ObjectId('5007a77972828b08a7000003'), "name"=>"aaa"}])
MONGODB (19ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"name_1", :ns=>"test_mongoid_development.users", :key=>{"name"=>1}, :unique=>true, :background=>true}])
MONGODB (0ms) test_mongoid_development['users'].update({"_id"=>BSON::ObjectId('5007a77972828b08a7000003')}, {"$set"=>{"last_sign_in_at"=>2012-07-19 06:21:45 UTC, "current_sign_in_at"=>2012-07-19 06:21:45 UTC, "last_sign_in_ip"=>"127.0.0.1", "current_sign_in_ip"=>"127.0.0.1", "sign_in_count"=>1}})
Redirected to http://localhost:3000/
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"name_1", :ns=>"test_mongoid_development.users", :key=>{"name"=>1}, :unique=>true, :background=>true}])
MONGODB (0ms) test_mongoid_development['users'].update({"_id"=>BSON::ObjectId('5007a77972828b08a7000003')}, {"$set"=>{"role"=>{"_id"=>BSON::ObjectId('5007a77972828b08a7000004'), "name"=>"individual"}}})
Completed 302 Found in 412ms


Started GET "/" for 127.0.0.1 at 2012-07-19 10:21:45 +0400
  Processing by PagesController#index as HTML
MONGODB (0ms) test_mongoid_development['system.namespaces'].find({})
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"name_1", :ns=>"test_mongoid_development.users", :key=>{"name"=>1}, :unique=>true, :background=>true}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"name_1", :ns=>"test_mongoid_development.users", :key=>{"name"=>1}, :unique=>true, :background=>true}])
MONGODB (0ms) test_mongoid_development['users'].find({:_id=>BSON::ObjectId('5007a77972828b08a7000003')}).limit(-1).sort([[:_id, :asc]])
MONGODB (0ms) test_mongoid_development['system.namespaces'].find({})
MONGODB (0ms) test_mongoid_development['pages'].find({})
Rendered pages/index.html.erb within layouts/application (4.3ms)
Completed 200 OK in 66ms (Views: 12.3ms)


Started GET "/assets/application.css?body=1" for 127.0.0.1 at 2012-07-19 10:21:45 +0400
Served asset /application.css - 304 Not Modified (0ms)


Started GET "/assets/pages.css?body=1" for 127.0.0.1 at 2012-07-19 10:21:45 +0400
Served asset /pages.css - 304 Not Modified (0ms)


Started GET "/assets/roles.css?body=1" for 127.0.0.1 at 2012-07-19 10:21:45 +0400
Served asset /roles.css - 304 Not Modified (0ms)


Started GET "/assets/scaffolds.css?body=1" for 127.0.0.1 at 2012-07-19 10:21:45 +0400
Served asset /scaffolds.css - 304 Not Modified (0ms)


Started GET "/assets/jquery.js?body=1" for 127.0.0.1 at 2012-07-19 10:21:45 +0400
Served asset /jquery.js - 304 Not Modified (0ms)


Started GET "/assets/spages.css?body=1" for 127.0.0.1 at 2012-07-19 10:21:45 +0400
Served asset /spages.css - 304 Not Modified (0ms)


Started GET "/assets/pages.js?body=1" for 127.0.0.1 at 2012-07-19 10:21:45 +0400
Served asset /pages.js - 304 Not Modified (0ms)


Started GET "/assets/jquery_ujs.js?body=1" for 127.0.0.1 at 2012-07-19 10:21:45 +0400
Served asset /jquery_ujs.js - 304 Not Modified (0ms)


Started GET "/assets/application.js?body=1" for 127.0.0.1 at 2012-07-19 10:21:45 +0400
Served asset /application.js - 304 Not Modified (0ms)


Started GET "/assets/spages.js?body=1" for 127.0.0.1 at 2012-07-19 10:21:45 +0400
Served asset /spages.js - 304 Not Modified (0ms)


Started GET "/assets/roles.js?body=1" for 127.0.0.1 at 2012-07-19 10:21:45 +0400
Served asset /roles.js - 304 Not Modified (0ms)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) test_mongoid_development['system.namespaces'].find({})
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"name_1", :ns=>"test_mongoid_development.users", :key=>{"name"=>1}, :unique=>true, :background=>true}])
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB (0ms) test_mongoid_development['system.namespaces'].find({})
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"role.name_1", :ns=>"test_mongoid_development.users", :key=>{"role.name"=>1}, :unique=>false}])
MONGODB (0ms) test_mongoid_development['system.indexes'].insert([{:name=>"name_1", :ns=>"test_mongoid_development.users", :key=>{"name"=>1}, :unique=>true, :background=>true}])
